>>> 找不到 asm 头文件
    https://askubuntu.com/questions/530248/asm-errno-h-no-such-file-or-directory

>>> 如何测试
    make && ./mdriver -f short1-bal.rep

>>> 静态链接库 动态链接库
    区别是静态链接库会将二进制代码指令在一开始就加入程序的代码区和常量区（完全融入）
    而动态链接库只有当调用到库内要使用的函数时，才会将对应的指令加入堆区上部、栈区下部这个位置，不过运行此代码使用的堆栈还是和原程序共享的

>>> (void *)p 自增时的行为
    对于 void * 类型的指针，自增操作实际上没有定义，因为 void 是一个不带大小的类型，没有办法知道应该跳过多少字节来指向下一个元素。因此，void * 指针是无法直接进行加法或自增操作的。
    不过，在 C 语言标准中，有一种特例，void * 指针自增时，会被转换为指向 char 类型的指针（因为 char 的大小是 1 字节），然后再进行加法操作。具体来说：
        (void *)p++ 会首先把 p 转换成 char *，然后执行自增，增加的字节数为 1 字节。
    因此，(void *)p++ 会使指针增加 1 字节，尽管 void 类型没有定义大小，但编译器会将其当作 char 类型处理，增加 1 字节。